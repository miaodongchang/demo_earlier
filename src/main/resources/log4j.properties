### set log levels ###
# \u6B64\u53E5\u4E3A\u5C06\u7B49\u7EA7\u4E3AINFO\u7684\u65E5\u5FD7\u4FE1\u606F\u8F93\u51FA\u5230stdout\u548CR\u8FD9\u4E24\u4E2A\u76EE\u7684\u5730,
# stdout\u548CR\u7684\u5B9A\u4E49\u5728\u4E0B\u9762\u7684\u4EE3\u7801,\u53EF\u4EE5\u4EFB\u610F\u8D77\u540D.
# \u7B49\u7EA7\u53EF\u5206\u4E3AOFF\u3001FATAL\u3001ERROR\u3001WARN\u3001INFO\u3001DEBUG\u3001ALL,\u5982\u679C\u914D\u7F6EOFF\u5219\u4E0D\u6253\u51FA\u4EFB\u4F55\u4FE1\u606F,
# \u5982\u679C\u914D\u7F6E\u4E3AINFO\u8FD9\u6837\u53EA\u663E\u793AINFO, WARN, ERROR\u7684log\u4FE1\u606F,\u800CDEBUG\u4FE1\u606F\u4E0D\u4F1A\u88AB\u663E\u793A
log4j.rootLogger = DEBUG , stdout, D , E
#log4j.rootLogger = error
## , stdout , D

# mybatis logging configuration
#log4j.logger.java.sql.Connection=ERROR
#log4j.logger.java.sql.Statement=ERROR
#log4j.logger.java.sql.PreparedStatement=ERROR
#log4j.logger.org.apache.activemq=WARN

###  output to the console ###
# \u6B64\u53E5\u4E3A\u5B9A\u4E49\u540D\u4E3Astdout\u7684\u8F93\u51FA\u7AEF\u662F\u54EA\u79CD\u7C7B\u578B,\u53EF\u4EE5\u662F
# org.apache.log4j.ConsoleAppender\uFF08\u63A7\u5236\u53F0\uFF09
# org.apache.log4j.FileAppender\uFF08\u6587\u4EF6\uFF09
# org.apache.log4j.DailyRollingFileAppender\uFF08\u6BCF\u5929\u4EA7\u751F\u4E00\u4E2A\u65E5\u5FD7\u6587\u4EF6\uFF09
# org.apache.log4j.RollingFileAppender\uFF08\u6587\u4EF6\u5927\u5C0F\u5230\u8FBE\u6307\u5B9A\u5C3A\u5BF8\u7684\u65F6\u5019\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684\u6587\u4EF6\uFF09
# org.apache.log4j.WriterAppender\uFF08\u5C06\u65E5\u5FD7\u4FE1\u606F\u4EE5\u6D41\u683C\u5F0F\u53D1\u9001\u5230\u4EFB\u610F\u6307\u5B9A\u7684\u5730\u65B9\uFF09
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
# \u6B64\u53E5\u4E3A\u5B9A\u4E49\u540D\u4E3Astdout\u7684\u8F93\u51FA\u7AEF\u7684layout\u662F\u54EA\u79CD\u7C7B\u578B,\u53EF\u4EE5\u662F
# org.apache.log4j.HTMLLayout\uFF08\u4EE5HTML\u8868\u683C\u5F62\u5F0F\u5E03\u5C40\uFF09
# org.apache.log4j.PatternLayout\uFF08\u53EF\u4EE5\u7075\u6D3B\u5730\u6307\u5B9A\u5E03\u5C40\u6A21\u5F0F\uFF09
# org.apache.log4j.SimpleLayout\uFF08\u5305\u542B\u65E5\u5FD7\u4FE1\u606F\u7684\u7EA7\u522B\u548C\u4FE1\u606F\u5B57\u7B26\u4E32\uFF09
# org.apache.log4j.TTCCLayout\uFF08\u5305\u542B\u65E5\u5FD7\u4EA7\u751F\u7684\u65F6\u95F4\u3001\u7EBF\u7A0B\u3001\u7C7B\u522B\u7B49\u7B49\u4FE1\u606F\uFF09
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout

#log4j.appender.stdout.Threshold = DEBUG

# \u5982\u679C\u4F7F\u7528pattern\u5E03\u5C40\u5C31\u8981\u6307\u5B9A\u7684\u6253\u5370\u4FE1\u606F\u7684\u5177\u4F53\u683C\u5F0FConversionPattern\uFF0C\u6253\u5370\u53C2\u6570\u5982\u4E0B\uFF1A
# %m \u8F93\u51FA\u4EE3\u7801\u4E2D\u6307\u5B9A\u7684\u6D88\u606F
# %p \u8F93\u51FA\u4F18\u5148\u7EA7\uFF0C\u5373DEBUG\uFF0CINFO\uFF0CWARN\uFF0CERROR\uFF0CFATAL
# %r \u8F93\u51FA\u81EA\u5E94\u7528\u542F\u52A8\u5230\u8F93\u51FA\u8BE5log\u4FE1\u606F\u8017\u8D39\u7684\u6BEB\u79D2\u6570
# %c \u8F93\u51FA\u6240\u5C5E\u7684\u7C7B\u76EE\uFF0C\u901A\u5E38\u5C31\u662F\u6240\u5728\u7C7B\u7684\u5168\u540D
# %t \u8F93\u51FA\u4EA7\u751F\u8BE5\u65E5\u5FD7\u4E8B\u4EF6\u7684\u7EBF\u7A0B\u540D
# %n \u8F93\u51FA\u4E00\u4E2A\u56DE\u8F66\u6362\u884C\u7B26\uFF0CWindows\u5E73\u53F0\u4E3A\u201Crn\u201D\uFF0CUnix\u5E73\u53F0\u4E3A\u201Cn\u201D
# %d \u8F93\u51FA\u65E5\u5FD7\u65F6\u95F4\u70B9\u7684\u65E5\u671F\u6216\u65F6\u95F4\uFF0C\u9ED8\u8BA4\u683C\u5F0F\u4E3AISO8601\uFF0C\u4E5F\u53EF\u4EE5\u5728\u5176\u540E\u6307\u5B9A\u683C\u5F0F\uFF0C\u6BD4\u5982\uFF1A%d{yyyy MMM dd HH:mm:ss,SSS}\uFF0C\u8F93\u51FA\u7C7B\u4F3C\uFF1A2002\u5E7410\u670818\u65E5 22\uFF1A10\uFF1A28\uFF0C921
# %l \u8F93\u51FA\u65E5\u5FD7\u4E8B\u4EF6\u7684\u53D1\u751F\u4F4D\u7F6E\uFF0C\u5305\u62EC\u7C7B\u76EE\u540D\u3001\u53D1\u751F\u7684\u7EBF\u7A0B\uFF0C\u4EE5\u53CA\u5728\u4EE3\u7801\u4E2D\u7684\u884C\u6570\u3002
# [QC]\u662Flog\u4FE1\u606F\u7684\u5F00\u5934\uFF0C\u53EF\u4EE5\u4E3A\u4EFB\u610F\u5B57\u7B26\uFF0C\u4E00\u822C\u4E3A\u9879\u76EE\u7B80\u79F0\u3002
# \u8F93\u51FA\u7684\u4FE1\u606F
# [TS] DEBUG [main] AbstractBeanFactory.getBean(189) | Returning cached instance of singleton bean 'MyAutoProxy'
log4j.appender.stdout.layout.ConversionPattern =%-d{[yyyy-MM-dd] HH:mm:ss.SSS} demo-%X{traceId} [%t]-[%F:%L]-[%p] %m%n

### Output to the log file ###
# \u5B9A\u4E49\u540D\u4E3AD\u7684\u8F93\u51FA\u7AEF\u7684\u7C7B\u578B\u4E3A\u6BCF\u5929\u4EA7\u751F\u4E00\u4E2A\u65E5\u5FD7\u6587\u4EF6
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
# \u6B64\u53E5\u4E3A\u5B9A\u4E49\u540D\u4E3AR\u7684\u8F93\u51FA\u7AEF\u7684\u6587\u4EF6\u540D\u4E3AD:\\Tomcat 5.5\\logs\\qc.log\u53EF\u4EE5\u81EA\u884C\u4FEE\u6539
log4j.appender.D.File = D:/zmiao/log/demo/log.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = INFO
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern =%-d{[yyyy-MM-dd] HH:mm:ss.SSS} manager-%X{traceId} [%t]-[%F:%L]-[%p] %m%n

### Save exception information to separate file ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = D:/zmiao/log/demo/error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern =%-d{[yyyy-MM-dd] HH:mm:ss.SSS} manager-%X{traceId} [%t]-[%F:%L]-[%p] %m%n

log4j.logger.org.springframework=ERROR
log4j.logger.org.apache=INFO
log4j.logger.org.mybatis=INFO
log4j.logger.org.hibernate=ERROR
log4j.logger.org.quartz=ERROR
log4j.logger.net.sf.ehcache=INFO
log4j.logger.json=ERROR
log4j.logger.com.alibaba=ERROR
log4j.logger.org.I0Itec=ERROR
log4j.logger.org.apache.zookeeper=ERROR
log4j.logger.io.netty=INFO